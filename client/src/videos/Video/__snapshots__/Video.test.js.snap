// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Video matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <Card
        className="card"
        tag="div"
    >
        <CardBlock
            tag="div"
        >
            <CardTitle
                tag="h4"
            >
                <span
                    className="ext"
                />
            </CardTitle>
        </CardBlock>
        <CardBlock
            tag="div"
        />
        <CardBlock
            tag="div"
        >
            <CardSubtitle
                tag="h6"
            >
                <Unknown
                    duration={0}
                />
                , 
                <Unknown
                    size={0}
                />
            </CardSubtitle>
            <CardText
                tag="p"
            />
            <Connect(Link)
                to={
                    Object {
                        "type": "vod/router/videos/HOME",
                      }
                }
            >
                &lt;&lt;
                 Back
            </Connect(Link)>
        </CardBlock>
    </Card>
</div>,
  "nodes": Array [
    <div>
      <Card
            className="card"
            tag="div"
      >
            <CardBlock
                  tag="div"
            >
                  <CardTitle
                        tag="h4"
                  >
                        <span
                              className="ext"
                        />
                  </CardTitle>
            </CardBlock>
            <CardBlock
                  tag="div"
            />
            <CardBlock
                  tag="div"
            >
                  <CardSubtitle
                        tag="h6"
                  >
                        <Unknown
                              duration={0}
                        />
                        , 
                        <Unknown
                              size={0}
                        />
                  </CardSubtitle>
                  <CardText
                        tag="p"
                  />
                  <Connect(Link)
                        to={
                              Object {
                                    "type": "vod/router/videos/HOME",
                                  }
                        }
                  >
                        &lt;&lt;
                         Back
                  </Connect(Link)>
            </CardBlock>
      </Card>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 1,
      "_context": Object {},
      "_currentElement": <Video
        loadVideo={[Function]}
        video={Object {}}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Video {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "loadVideo": [Function],
          "video": Object {},
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <Card
                    className="card"
                    tag="div"
          >
                    <CardBlock
                              tag="div"
                    >
                              <CardTitle
                                        tag="h4"
                              >
                                        <span
                                                  className="ext"
                                        />
                              </CardTitle>
                    </CardBlock>
                    <CardBlock
                              tag="div"
                    />
                    <CardBlock
                              tag="div"
                    >
                              <CardSubtitle
                                        tag="h6"
                              >
                                        <Unknown
                                                  duration={0}
                                        />
                                        , 
                                        <Unknown
                                                  size={0}
                                        />
                              </CardSubtitle>
                              <CardText
                                        tag="p"
                              />
                              <Connect(Link)
                                        to={
                                                  Object {
                                                            "type": "vod/router/videos/HOME",
                                                          }
                                        }
                              >
                                        &lt;&lt;
                                         Back
                              </Connect(Link)>
                    </CardBlock>
          </Card>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <Card
                    className="card"
                    tag="div"
          >
                    <CardBlock
                              tag="div"
                    >
                              <CardTitle
                                        tag="h4"
                              >
                                        <span
                                                  className="ext"
                                        />
                              </CardTitle>
                    </CardBlock>
                    <CardBlock
                              tag="div"
                    />
                    <CardBlock
                              tag="div"
                    >
                              <CardSubtitle
                                        tag="h6"
                              >
                                        <Unknown
                                                  duration={0}
                                        />
                                        , 
                                        <Unknown
                                                  size={0}
                                        />
                              </CardSubtitle>
                              <CardText
                                        tag="p"
                              />
                              <Connect(Link)
                                        to={
                                                  Object {
                                                            "type": "vod/router/videos/HOME",
                                                          }
                                        }
                              >
                                        &lt;&lt;
                                         Back
                              </Connect(Link)>
                    </CardBlock>
          </Card>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Video
    loadVideo={[Function]}
    video={Object {}}
/>,
}
`;
